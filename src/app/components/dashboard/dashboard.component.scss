.search{
    width : 50%;

}
.sidenavbar{
  padding: 0px 40px;
}
.fun-img{
    
  width: fit-content;
  max-width: fit-content;

}
::ng-deep .mat-form-field-wrapper{
    padding-bottom: 0px;
}
.round{
    margin-left: -30px;
}
.profile-pic{
  width:100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
}
.footer{
  width:100%;
  height: 100%;
}
.profile-image{
  margin-right: 20px;
  margin-left: 20px;
  margin-bottom: 20px;
  
}
.footer{
  width:100%;
  height: 100%;
  margin-right: 20px;
  margin-left: 20px;
  margin-bottom: 20px;
}
.divider{
    padding: 0px 40px 0px 0px;
    top:10px;
    width:100%;
    height:1px;
    margin-left:auto;
    margin-right: auto;
    margin-bottom: 10px;
    background-color: rgba(0,0,0,.28)
    

}
.sidenav-content{
    border:0px;
}
.sidnav{
    border-width: 50px;
    background-color: none;
    border-bottom-right-radius: 32px;
    border-top-right-radius: 32px;
}
.sidenav-list{
    border-width: 50px;
    width: 100px;
    background-color: rgba(238, 233, 142, 0.408);
    border-bottom-right-radius: 32px;
    border-top-right-radius: 32px;
}
.example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  
  .example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
  }
  
  h1.example-app-name {
    margin-left: 8px;
  }
  
  .example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
  }
  
  
  .example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  }
  